{"version":3,"sources":["components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.component.jsx","redux/shop/shop.selectors.js","components/collections-overview/collections-overview.component.jsx","pages/collection/CollectionPage.component.jsx","pages/shop/shop.component.jsx"],"names":["connect","addItemToCart","item","name","price","imageUrl","className","style","backgroundImage","onClick","CollectionPreview","collection","history","useHistory","items","title","push","toLowerCase","toUpperCase","filter","idx","map","id","selectCollections","createSelector","state","shop","collections","selectCollectionsForPreview","Object","keys","key","CollectionsOverview","structuredSelector","createStructuredSelector","useSelector","CollectionPage","collectionUrlParam","collectionId","useParams","ShopPage","match","exact","path","component","CollectionOveriew"],"mappings":"gRA8BeA,cAAQ,KAAM,CAAEC,mBAAhBD,EAtBQ,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,KAAMD,EAAoB,EAApBA,cACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAErB,OACE,sBAAKC,UAAU,kBAAf,UACE,qBACEA,UAAU,QACVC,MAAO,CACLC,gBAAgB,OAAD,OAASH,EAAT,QAGnB,sBAAKC,UAAU,oBAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBH,IACxB,sBAAMG,UAAU,QAAhB,SAAyBF,OAE3B,cAAC,IAAD,CAAcK,QAAS,kBAAMR,EAAcC,IAA3C,+BCQSQ,G,OAvBW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACvBC,EAAUC,cACNC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAKf,OACE,sBAAKT,UAAU,qBAAf,UACE,oBAAIA,UAAU,QAAQG,QALV,WACdG,EAAQI,KAAR,gBAAsBD,EAAME,iBAI1B,SACGF,EAAMG,gBAET,qBAAKZ,UAAU,UAAf,SACGQ,EACEK,QAAO,SAACjB,EAAMkB,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACnB,GAAD,OACH,cAAC,EAAD,CAA8BA,KAAMA,GAAfA,EAAKoB,cCpBzBC,EAAoBC,YAC/B,CAHiB,SAACC,GAAD,OAAWA,EAAMC,QAIlC,SAACA,GAAD,OAAUA,EAAKC,eAGJC,EAA8BJ,YACzC,CAACD,IACD,SAACI,GAAD,OAAiBE,OAAOC,KAAKH,GAAaN,KAAI,SAACU,GAAD,OAASJ,EAAYI,SCctDC,G,OAfa,WAC1B,IAAMC,EAAqBC,YAAyB,CAClDP,YAAaC,IAGPD,EAAgBQ,YAAYF,GAA5BN,YACR,OACE,qBAAKrB,UAAU,uBAAf,SACGqB,EAAYN,KAAI,SAACV,GAAD,OACf,cAAC,EAAD,CAAuCA,WAAYA,GAA3BA,EAAWW,WCS5Bc,G,OApBQ,WAIrB,IFE+BC,EEFvBC,EAAiBC,cAAjBD,aACF3B,EAAawB,aFCYE,EEDiBC,EFEhDd,YACE,CAACD,IACD,SAACI,GAAD,OAAiBA,EAAYU,QEFvBtB,EAAiBJ,EAAjBI,MAAOD,EAAUH,EAAVG,MACf,OACE,sBAAKR,UAAU,kBAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBS,IACvB,qBAAKT,UAAU,QAAf,SACGQ,EAAMO,KAAI,SAACnB,GAAD,OACT,cAAC,EAAD,CAA8BA,KAAMA,GAAfA,EAAKoB,cCPrBkB,UARE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,sBAAKnC,UAAU,YAAf,UACE,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAI,UAAKF,EAAME,MAAQC,UAAWC,IAC/C,cAAC,IAAD,CAAOF,KAAI,UAAKF,EAAME,KAAX,kBAAiCC,UAAWR","file":"static/js/3.313ce048.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { addItemToCart } from \"../../redux/cart/cart.actions\";\n\nimport \"./collection-item.styles.scss\";\n\nconst CollectionItem = ({ item, addItemToCart }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <div className='collection-item'>\n      <div\n        className='image'\n        style={{\n          backgroundImage: `url(${imageUrl})`,\n        }}\n      />\n      <div className='collection-footer'>\n        <span className='name'>{name}</span>\n        <span className='price'>{price}</span>\n      </div>\n      <CustomButton onClick={() => addItemToCart(item)}>\n        Add to cart\n      </CustomButton>\n    </div>\n  );\n};\n\nexport default connect(null, { addItemToCart })(CollectionItem);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport CollectionItem from \"../collection-item/collection-item.component\";\n\nimport \"./collection-preview.styles.scss\";\n\n// const CollectionPreview = ({ id, {title, items} }) => {\nconst CollectionPreview = ({ collection }) => {\n  let history = useHistory();\n  const { items, title } = collection;\n\n  const onClick = () => {\n    history.push(`/shop/${title.toLowerCase()}`);\n  };\n  return (\n    <div className='collection-preview'>\n      <h1 className='title' onClick={onClick}>\n        {title.toUpperCase()}\n      </h1>\n      <div className='preview'>\n        {items\n          .filter((item, idx) => idx < 4)\n          .map((item) => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CollectionPreview;\n","import { createSelector } from \"reselect\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) => Object.keys(collections).map((key) => collections[key])\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector(\n    [selectCollections],\n    (collections) => collections[collectionUrlParam]\n  );\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport CollectionPreview from \"../collection-preview/collection-preview.component\";\n\nimport { selectCollectionsForPreview } from \"../../redux/shop/shop.selectors\";\n\nimport \"./collections-overview.styles.scss\";\n\nconst CollectionsOverview = () => {\n  const structuredSelector = createStructuredSelector({\n    collections: selectCollectionsForPreview,\n  });\n\n  const { collections } = useSelector(structuredSelector);\n  return (\n    <div className='collections-overview'>\n      {collections.map((collection) => (\n        <CollectionPreview key={collection.id} collection={collection} />\n      ))}\n    </div>\n  );\n};\n\nexport default CollectionsOverview;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\n\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport \"./collection.styles.scss\";\n\nconst CollectionPage = () => {\n  //===\n  //=== INSTEAD OF GETTING FROM THE CONNECT AND MAPSTATE TO PROPS\n  //=== WE USE THE 'useSelector' and get it directly from the method(selectCollection) exported from the shop.selectors\n  const { collectionId } = useParams();\n  const collection = useSelector(selectCollection(collectionId));\n\n  const { title, items } = collection;\n  return (\n    <div className='collection-page'>\n      <h2 className='title'>{title}</h2>\n      <div className='items'>\n        {items.map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CollectionPage;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionOveriew from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/CollectionPage.component\";\n// import WithSpinner from \"../../components/with-spinner/with-spinner.component\"\n\nconst ShopPage = ({ match }) => {\n  return (\n    <div className='shop-page'>\n      <Route exact path={`${match.path}`} component={CollectionOveriew} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n};\nexport default ShopPage;\n"],"sourceRoot":""}