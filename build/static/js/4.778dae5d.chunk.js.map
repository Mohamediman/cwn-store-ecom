{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","onChange","label","otherProps","className","connect","state","isAuthenticated","auth","loginUser","useState","email","password","formData","setFormData","handleChange","e","target","name","to","onSubmit","preventDefault","alert","type","required","signUpUser","confirmPassword","console","log","handleSubmit","SignInAndSignUpPage"],"mappings":"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","file":"static/js/4.778dae5d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nimport \"./form-input.styles.scss\";\n\nconst FormInput = ({ onChange, label, ...otherProps }) => (\n  <div className='group'>\n    <input className='form-input' onChange={onChange} {...otherProps} />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/auth/authActions\";\n\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({ loginUser, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      alert(\"Both email and password are required\");\n    }\n\n    loginUser(email, password);\n\n    setFormData({ email: \"\", password: \"\" });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <div className='sign-in'>\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name='email'\n          type='email'\n          onChange={(e) => handleChange(e)}\n          value={email}\n          label='email'\n          required\n        />\n        <FormInput\n          name='password'\n          type='password'\n          value={password}\n          onChange={(e) => handleChange(e)}\n          label='password'\n          required\n        />\n        <CustomButton type='submit'> Sign in </CustomButton>\n      </form>\n    </div>\n  );\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   loginUser: (userObj) => dispatch(loginUser(userObj)),\n// });\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { loginUser })(SignIn);\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport \"./sign-up.styles.scss\";\n\nimport { connect } from \"react-redux\";\nimport { signUpUser } from \"../../redux/auth/authActions\";\n\nconst SignUp = ({ signUpUser, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { name, email, password, confirmPassword } = formData;\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"HandleSubmit called here...\");\n    if (email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert(\"Please fill all the required fields\");\n    }\n\n    signUpUser(name, email, password, confirmPassword);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <div className='sign-up'>\n      <h2 className='title'>I do not have a account</h2>\n      <span>Sign up with your email and password</span>\n      <form className='sign-up-form' onSubmit={(e) => handleSubmit(e)}>\n        <FormInput\n          type='text'\n          name='name'\n          value={name}\n          onChange={(e) => handleChange(e)}\n          label='Display Name'\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={(e) => handleChange(e)}\n          label='Email'\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={password}\n          onChange={(e) => handleChange(e)}\n          label='Password'\n          required\n        />\n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          onChange={(e) => handleChange(e)}\n          label='Confirm Password'\n          required\n        />\n        <CustomButton type='submit'>SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { signUpUser })(SignUp);\n","import React from 'react';\n\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nimport './sign-in-and-sign-up.styles.scss';\n\nconst SignInAndSignUpPage = () => (\n  <div className='sign-in-and-sign-up'>\n    <SignIn />\n    <SignUp />\n  </div>\n);\n\nexport default SignInAndSignUpPage;"],"sourceRoot":""}